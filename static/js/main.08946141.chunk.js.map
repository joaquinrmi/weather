{"version":3,"sources":["components/button/button.tsx","components/modal/index.tsx","components/modal/modal.tsx","components/city_form/index.tsx","components/city_form/city_form.tsx","components/loading/loading.tsx","components/popup_error/index.tsx","components/popup_error/popup_error.tsx","pages/weather/weather.tsx","pages/weather/index.tsx","app/app.tsx","index.tsx"],"names":["Button","props","id","className","onClick","children","Modal","useEffect","checkEscape","ev","key","closeRequest","document","addEventListener","getElementById","onclick","removeEventListener","CityForm","cityInput","focus","onFormSubmit","form","city","onSubmit","cityName","value","preventDefault","currentTarget","name","type","placeholder","Loading","width","height","cx","cy","r","strokeWidth","stroke","fill","PopupError","setTimeout","element","classList","add","animation","querySelector","title","content","remove","RAIN_DAY_BACKGROUND","top","bottom","RAIN_NIGHT_BACKGROUND","Weather","useState","showError","setShowError","modalStatus","setModalStatus","setCityName","weatherData","setWeatherData","getWeather","a","fetch","response","status","json","data","forecast","Array","i","forecastDay","forecastday","condition","day","text","maxTemperature","maxtemp_c","minTemperature","mintemp_c","chanceOfRain","daily_chance_of_rain","icon","location","country","current","isDay","is_day","temperature","temp_c","precipitation","precip_mm","cloud","background","rainContainer","weather","opacity","topRGB","bottomRGB","style","map","index","src","alt","state","App","ReactDom"],"mappings":"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","file":"static/js/main.08946141.chunk.js","sourcesContent":["import React, { MouseEventHandler } from \"react\";\r\n\r\nimport \"./button.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n\r\n    onClick?: MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nconst Button: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    return <button\r\n        id={props.id}\r\n        className=\"button\"\r\n        onClick={props.onClick}\r\n    >\r\n        <span className=\"content\">\r\n            {props.children}\r\n        </span>\r\n    </button>;\r\n};\r\n\r\nexport default Button;","import Modal from \"./modal\";\r\n\r\nexport default Modal;\r\nexport * from \"./modal\";","import React, { useEffect } from \"react\";\r\n\r\nimport \"./modal.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n\r\n    closeRequest(): void;\r\n}\r\n\r\nconst Modal: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const checkEscape = (ev: KeyboardEvent) =>\r\n        {\r\n            if(ev.key === \"Escape\")\r\n            {\r\n                props.closeRequest();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"keydown\", checkEscape);\r\n\r\n        const closeButton = document.getElementById(`close-${props.id}`) as HTMLSpanElement;\r\n        \r\n        closeButton.onclick = () =>\r\n        {\r\n            props.closeRequest();\r\n        };\r\n\r\n        return () =>\r\n        {\r\n            document.removeEventListener(\"keydown\", checkEscape);\r\n        };\r\n    },\r\n    []);\r\n\r\n    return <div id={props.id} className=\"modal visible\">\r\n        <header>\r\n            <i id={`close-${props.id}`} className=\"fi fi-rr-angle-left\"></i>\r\n        </header>\r\n\r\n        <section>\r\n            {props.children}\r\n        </section>\r\n    </div>;\r\n};\r\n\r\nexport default Modal;","import CityForm from \"./city_form\";\r\n\r\nexport default CityForm;\r\nexport * from \"./city_form\";","import React, { useEffect } from \"react\";\r\n\r\nimport Button from \"../button/\";\r\n\r\nimport \"./city_form.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n\r\n    onSubmit(data: CityFormData): void;\r\n}\r\n\r\nexport interface CityFormData\r\n{\r\n    cityName: string;\r\n}\r\n\r\ninterface CityFormElement extends HTMLFormElement\r\n{\r\n    city: HTMLInputElement;\r\n}\r\n\r\nconst CityForm: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const cityInput = document.getElementById(`input-${props.id}`) as HTMLInputElement;\r\n\r\n        if(cityInput !== null)\r\n        {\r\n            cityInput.focus();\r\n        }\r\n    });\r\n\r\n    const onFormSubmit = (form: CityFormElement) =>\r\n    {\r\n        if(!form)\r\n        {\r\n            return;\r\n        }\r\n\r\n        if(!form.city)\r\n        {\r\n            return;\r\n        }\r\n\r\n        props.onSubmit({\r\n            cityName: form.city.value\r\n        });\r\n    };\r\n\r\n    return <form\r\n        id={props.id}\r\n        className=\"city-form\"\r\n        onSubmit={(ev) =>\r\n        {\r\n            ev.preventDefault();\r\n\r\n            onFormSubmit(ev.currentTarget as CityFormElement);\r\n        }}\r\n    >\r\n        <input\r\n            id={`input-${props.id}`}\r\n            name=\"city\"\r\n            type=\"text\"\r\n            placeholder=\"Ciudad (nombre en inglÃ©s)\"\r\n        />\r\n\r\n        <Button\r\n            id={`button-${props.id}`}\r\n            onClick={() =>\r\n            {\r\n                const form = document.getElementById(props.id) as CityFormElement;\r\n\r\n                onFormSubmit(form);\r\n            }}\r\n        >\r\n            Aceptar\r\n        </Button>\r\n\r\n        <input type=\"submit\" className=\"invisible\" />\r\n    </form>;\r\n};\r\n\r\nexport default CityForm;","import React from \"react\";\r\n\r\nimport \"./loading.scss\";\r\n\r\nexport interface Props\r\n{}\r\n\r\nconst Loading: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    return <svg className=\"loading\" width=\"30\" height=\"30\">\r\n        <circle cx=\"50%\" cy=\"50%\" r=\"12\" strokeWidth=\"4\" stroke=\"#A1DAF7\" fill=\"none\"></circle>\r\n        <circle className=\"animated-circle\" cx=\"50%\" cy=\"50%\" r=\"12\" strokeWidth=\"4\" stroke=\"#0080C8\" fill=\"none\"></circle>\r\n    </svg>;\r\n};\r\n\r\nexport default Loading;","import PopupError from \"./popup_error\";\r\n\r\nexport default PopupError;\r\nexport * from \"./popup_error\";","import React, { useEffect } from \"react\";\r\n\r\nimport \"./popup_error.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    title: React.ReactNode;\r\n    content: React.ReactNode;\r\n\r\n    closeRequest(): void;\r\n}\r\n\r\nconst PopupError: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        setTimeout(() =>\r\n        {\r\n            const element = document.getElementById(props.id) as HTMLDivElement;\r\n            if(element === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            element.classList.add(\"end\");\r\n\r\n            const animation = element.querySelector(\".popup-animation\") as HTMLDivElement;\r\n            if(animation === null)\r\n            {\r\n                return;\r\n            }\r\n\r\n            animation.classList.add(\"end\");\r\n        }, 200);\r\n    });\r\n\r\n    const closePopup = () =>\r\n    {\r\n        const element = document.getElementById(props.id) as HTMLDivElement;\r\n        if(element === null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        element.classList.remove(\"end\");\r\n\r\n        const animation = element.querySelector(\".popup-animation\") as HTMLDivElement;\r\n        if(animation === null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        animation.classList.remove(\"end\");\r\n\r\n        setTimeout(() =>\r\n        {\r\n            props.closeRequest();\r\n        },\r\n        250);\r\n    };\r\n\r\n    return <div id={props.id} className=\"popup-error\">\r\n        <div className=\"popup-animation\">\r\n            <section className=\"popup-body\">\r\n                <header className=\"popup-header\">\r\n                    {props.title}\r\n                </header>\r\n\r\n                <section className=\"popup-content\">\r\n                    {props.content}\r\n                </section>\r\n\r\n                <footer className=\"popup-footer\">\r\n                    <button\r\n                        className=\"popup-close\"\r\n                        onClick={closePopup}\r\n                    >\r\n                        Cerrar\r\n                    </button>\r\n                </footer>\r\n            </section>\r\n        </div>\r\n    </div>;\r\n};\r\n\r\nexport default PopupError;","import React, { useState, useEffect } from \"react\";\r\nimport ForecastDayResponse from \"../../forecast_day_response\";\r\nimport WeatherResponse from \"../../weather_response\";\r\n\r\nimport Button from \"../../components/button/\";\r\nimport Modal from \"../../components/modal/\";\r\nimport CityForm from \"../../components/city_form/\";\r\nimport Loading from \"../../components/loading/\";\r\nimport PopupError from \"../../components/popup_error\";\r\n\r\nimport \"./weather.scss\";\r\n\r\nexport interface Props\r\n{}\r\n\r\nconst KEY = \"9de9e15c101a44b9b6c40544212011\";\r\nconst AQI = \"no\";\r\nconst LANG = \"es\";\r\nconst FORECAST_URL = \"https://api.weatherapi.com/v1/forecast.json\";\r\n\r\nconst RAIN_DAY_BACKGROUND: BackgroundColor =\r\n{\r\n    top: [ 98, 106, 120 ],\r\n    bottom: [ 58, 63, 80 ]\r\n};\r\n\r\nconst RAIN_NIGHT_BACKGROUND: BackgroundColor =\r\n{\r\n    top: [ 50, 54, 66 ],\r\n    bottom: [ 22, 23, 28 ]\r\n};\r\n\r\nconst Weather: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    const [ showError, setShowError ] = useState<boolean>(false);\r\n    const [ modalStatus, setModalStatus ] = useState<boolean>(false);\r\n    const [ cityName, setCityName ] = useState<string>(\"parana\");\r\n\r\n    const [ weatherData, setWeatherData ] = useState<WeatherData | null>(null);\r\n\r\n    const getWeather = async () =>\r\n    {\r\n        const response = await fetch(`${FORECAST_URL}?key=${KEY}&q=${cityName}&days=2&aqi=${AQI}&lang=${LANG}`, {});\r\n        \r\n        if(response.status === 200)\r\n        {\r\n            const data = await response.json() as WeatherResponse;\r\n\r\n            const forecast = new Array<ForecastDay>(2);\r\n            for(let i = 0; i < 2; ++i)\r\n            {\r\n                const forecastDay: ForecastDayResponse = data.forecast.forecastday[i];\r\n\r\n                forecast[i] = {\r\n                    condition: forecastDay.day.condition.text,\r\n                    maxTemperature: forecastDay.day.maxtemp_c,\r\n                    minTemperature: forecastDay.day.mintemp_c,\r\n                    chanceOfRain: forecastDay.day.daily_chance_of_rain,\r\n                    icon: forecastDay.day.condition.icon\r\n                };\r\n            }\r\n\r\n            setWeatherData({\r\n                name: data.location.name,\r\n                country: data.location.country,\r\n                condition: data.current.condition.text,\r\n                isDay: data.current.is_day === 1 ? true : false,\r\n                temperature: data.current.temp_c,\r\n                precipitation: data.current.precip_mm,\r\n                cloud: data.current.cloud,\r\n                forecast: forecast\r\n            });\r\n        }\r\n        else\r\n        {\r\n            setShowError(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() =>\r\n    {\r\n        getWeather();\r\n    },\r\n    [ cityName ]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(weatherData === null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const rainContainer = document.getElementById(\"rain-container\") as HTMLDivElement;\r\n        const weather = document.getElementById(\"weather\") as HTMLDivElement;\r\n\r\n        let background: BackgroundColor;\r\n        if(weatherData.isDay)\r\n        {\r\n            background = RAIN_DAY_BACKGROUND;\r\n            weather.classList.remove(\"night\");\r\n            weather.classList.add(\"day\");\r\n        }\r\n        else\r\n        {\r\n            background = RAIN_NIGHT_BACKGROUND;\r\n            weather.classList.remove(\"day\");\r\n            weather.classList.add(\"night\");\r\n        }\r\n\r\n        const opacity = weatherData.cloud / 100;\r\n        const topRGB = `${background.top[0]},${background.top[1]},${background.top[2]}`;\r\n        const bottomRGB = `${background.bottom[0]},${background.bottom[1]},${background.bottom[2]}`;\r\n\r\n        rainContainer.style.background = `linear-gradient(180deg, rgba(${topRGB}, ${opacity}), rgba(${bottomRGB}, ${opacity}))`;\r\n    });\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(weatherData === null)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const button = document.getElementById(\"change-city\") as HTMLDivElement;\r\n\r\n        button.onclick = () =>\r\n        {\r\n            setModalStatus(true);\r\n        };\r\n    },\r\n    [ weatherData ]);\r\n\r\n    if(weatherData !== null)\r\n    {\r\n        return <div id=\"weather\" className=\"weather day\">\r\n            <div id=\"rain-container\" className=\"rain\">\r\n                <header>\r\n                    <span className=\"city-name\">\r\n                        {weatherData.name}\r\n                    </span>\r\n\r\n                    <span className=\"country\">\r\n                        {weatherData.country}\r\n                    </span>\r\n                </header>\r\n\r\n                <section>\r\n                    <div className=\"temperature\">\r\n                        <span className=\"ammount\">\r\n                            {weatherData.temperature}\r\n                        </span>\r\n                        <span className=\"unit\">Â°C</span>\r\n                    </div>\r\n\r\n                    <span className=\"condition-container\">\r\n                        <span className=\"condition\">\r\n                            {weatherData.condition}\r\n                        </span>\r\n\r\n                        <div className=\"precipitation\">\r\n                            <i className=\"fi fi-rr-raindrops\"></i>\r\n                            <span>\r\n                                {weatherData.forecast[0].chanceOfRain}%\r\n                            </span>\r\n                        </div>\r\n                    </span>\r\n                </section>\r\n\r\n                <footer>\r\n                    <div className=\"forecast-container\">\r\n                        {weatherData.forecast.map((element, index) =>\r\n                        {\r\n                            return <div key={`forecastday-${index}`} className=\"forecastday\">\r\n                                <div className=\"left\">\r\n                                    <img src={element.icon} alt={element.condition} />\r\n\r\n                                    <span className=\"day\">\r\n                                        {index === 0 ? \"Hoy\" : \"MaÃ±ana\"}\r\n                                    </span>\r\n\r\n                                    <span className=\"condition\">\r\n                                        {element.condition}\r\n                                    </span>\r\n                                </div>\r\n\r\n                                <div className=\"right\">\r\n                                    <span className=\"max-temperature\">\r\n                                        {element.maxTemperature}Â°\r\n                                    </span>\r\n                                    <span className=\"slash\">\r\n                                        /\r\n                                    </span>\r\n                                    <span className=\"min-temperature\">\r\n                                        {element.minTemperature}Â°\r\n                                    </span>\r\n                                </div>\r\n                            </div>;\r\n                        })}\r\n                    </div>\r\n\r\n                    <div className=\"button-container\">\r\n                        <Button id=\"change-city\">\r\n                            Cambiar ciudad\r\n                        </Button>\r\n                    </div>\r\n                </footer>\r\n            </div>\r\n\r\n            {modalStatus ?\r\n                <Modal\r\n                    id=\"modal-change-city\"\r\n                    closeRequest={() =>\r\n                    {\r\n                        setModalStatus(false);\r\n                    }}\r\n                >\r\n                    <CityForm\r\n                        id=\"form-change-city\"\r\n                        onSubmit={(data) =>\r\n                        {\r\n                            setModalStatus(false);\r\n                            setCityName(state =>\r\n                            {\r\n                                return data.cityName;\r\n                            });\r\n                        }}\r\n                    />\r\n                </Modal> :\r\n                null\r\n            }\r\n\r\n            {showError ?\r\n                <PopupError\r\n                    id=\"search-city-error\"\r\n                    title={<h2>\r\n                        Â¡Ups! Algo saliÃ³ mal\r\n                    </h2>}\r\n                    content={<p>\r\n                        No se encontrÃ³ la ciudad especificada.\r\n                    </p>}\r\n                    closeRequest={() =>\r\n                    {\r\n                        setShowError(false);\r\n                    }}\r\n                /> :\r\n                null\r\n            }\r\n        </div>;\r\n    }\r\n    else\r\n    {\r\n        return <div className=\"loading-container\">\r\n            <Loading />\r\n        </div>;\r\n    }\r\n};\r\n\r\ninterface WeatherData\r\n{\r\n    name: string;\r\n    country: string;\r\n    condition: string;\r\n    isDay: boolean;\r\n    temperature: number;\r\n    precipitation: number;\r\n    cloud: number;\r\n    forecast: Array<ForecastDay>;\r\n}\r\n\r\ninterface ForecastDay\r\n{\r\n    condition: string;\r\n    maxTemperature: number;\r\n    minTemperature: number;\r\n    chanceOfRain: number;\r\n    icon: string;\r\n}\r\n\r\ninterface BackgroundColor\r\n{\r\n    top: [ number, number, number ];\r\n    bottom: [ number, number, number ];\r\n}\r\n\r\nexport default Weather;","import Weather from \"./weather\";\r\n\r\nexport default Weather;\r\nexport * from \"./weather\";","import React from \"react\";\r\n\r\nimport Weather from \"../pages/weather\";\r\n\r\nimport \"./app.scss\";\r\n\r\nconst App: React.FunctionComponent = () =>\r\n{\r\n    return <>\r\n        <Weather />\r\n    </>;\r\n};\r\n\r\nexport default App;","import * as ReactDom from \"react-dom\";\r\n\r\nimport App from \"./app/\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"app\"));"],"sourceRoot":""}