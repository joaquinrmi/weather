{"version":3,"sources":["components/button/button.tsx","components/modal/modal.tsx","components/city_form/city_form.tsx","components/loading/loading.tsx","pages/weather/weather.tsx","app/app.tsx","index.tsx"],"names":["Button","props","id","className","content","Modal","useEffect","modal","document","getElementById","isOpen","classList","contains","open","add","close","setTimeout","remove","checkEscape","ev","key","addEventListener","onclick","removeEventListener","children","CityForm","form","input","setFocus","focus","clear","value","onSubmit","cityName","checkSubmit","activeElement","type","placeholder","Loading","width","height","cx","cy","r","strokeWidth","stroke","fill","RAIN_DAY_BACKGROUND","top","bottom","RAIN_NIGHT_BACKGROUND","Weather","useState","setCityName","loaded","name","country","condition","isDay","temperature","precipitation","cloud","forecast","minTemperature","maxTemperature","chanceOfRain","icon","weatherData","setWeatherData","getWeather","a","fetch","response","status","json","data","Array","i","forecastDay","forecastday","day","text","maxtemp_c","mintemp_c","daily_chance_of_rain","location","current","is_day","temp_c","precip_mm","console","error","background","rainContainer","weather","opacity","topRGB","bottomRGB","style","button","cityForm","state","map","element","index","src","alt","App","ReactDom"],"mappings":"+RAmBeA,EATgC,SAACC,GAE5C,OAAO,qBAAKC,GAAID,EAAMC,GAAIC,UAAU,SAA7B,SACH,sBAAMA,UAAU,UAAhB,SACKF,EAAMG,aCgEJC,G,MA9D+B,SAACJ,GAmD3C,OAjDAK,qBAAU,WAEN,IAAMC,EAAQC,SAASC,eAAeR,EAAMC,IAE5CK,EAAMG,OAAS,WAEX,OAAOH,EAAMI,UAAUC,SAAS,aAAeL,EAAMI,UAAUC,SAAS,YAG5EL,EAAMM,KAAO,WAETN,EAAMI,UAAUG,IAAI,YAGxBP,EAAMQ,MAAQ,WAEVR,EAAMI,UAAUG,IAAI,WACpBE,YAAW,WAEPT,EAAMI,UAAUM,OAAO,WACvBV,EAAMI,UAAUM,OAAO,aAE3B,MAGJ,IAAMC,EAAc,SAACC,GAEH,WAAXA,EAAGC,KAEFb,EAAMQ,SAad,OATAP,SAASa,iBAAiB,UAAWH,GAEjBV,SAASC,eAAT,gBAAiCR,EAAMC,KAE/CoB,QAAU,WAElBf,EAAMQ,SAGH,WAEHP,SAASe,oBAAoB,UAAWL,MAGhD,IAEO,sBAAKhB,GAAID,EAAMC,GAAIC,UAAU,QAA7B,UACH,iCACI,mBAAGD,GAAE,gBAAWD,EAAMC,IAAMC,UAAU,0BAG1C,kCACKF,EAAMuB,gBCQJC,G,MAzDkC,SAACxB,GAkD9C,OAhDAK,qBAAU,WAEN,IAAMoB,EAAOlB,SAASC,eAAeR,EAAMC,IACrCyB,EAAQnB,SAASC,eAAT,gBAAiCR,EAAMC,KAErDwB,EAAKE,SAAW,WAEZD,EAAME,SAGVH,EAAKI,MAAQ,WAETH,EAAMI,MAAQ,IAGlBL,EAAKM,SAAW,aAGDxB,SAASC,eAAT,iBAAkCR,EAAMC,KAEhDoB,QAAU,WAEbI,EAAKM,SAAS,CACVC,SAAUN,EAAMI,QAEpBL,EAAKI,SAGT,IAAMI,EAAc,SAACf,GAEH,UAAXA,EAAGC,KAAmBZ,SAAS2B,gBAAkBR,IAEhDD,EAAKM,SAAS,CACVC,SAAUN,EAAMI,QAEpBL,EAAKI,UAMb,OAFAtB,SAASa,iBAAiB,UAAWa,GAE9B,WAEH1B,SAASe,oBAAoB,UAAWW,MAGhD,IAEO,sBAAKhC,GAAID,EAAMC,GAAIC,UAAU,YAA7B,UACH,uBAAOD,GAAE,gBAAWD,EAAMC,IAAMkC,KAAK,OAAOC,YAAY,WAExD,cAAC,EAAD,CAAQnC,GAAE,iBAAYD,EAAMC,IAAME,QAAQ,iBC9DnCkC,G,MARiC,SAACrC,GAE7C,OAAO,sBAAKE,UAAU,UAAUoC,MAAM,KAAKC,OAAO,KAA3C,UACH,wBAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKC,YAAY,IAAIC,OAAO,UAAUC,KAAK,SACvE,wBAAQ3C,UAAU,kBAAkBsC,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKC,YAAY,IAAIC,OAAO,UAAUC,KAAK,cCQrGC,G,MACN,CACIC,IAAK,CAAE,GAAI,IAAK,KAChBC,OAAQ,CAAE,GAAI,GAAI,MAGhBC,EACN,CACIF,IAAK,CAAE,GAAI,GAAI,IACfC,OAAQ,CAAE,GAAI,GAAI,KA2OPE,EAxOiC,SAAClD,GAE7C,MAAkCmD,mBAAiB,UAAnD,mBAAQnB,EAAR,KAAkBoB,EAAlB,KAEA,EAAwCD,mBAAsB,CAC1DE,QAAQ,EACRC,KAAM,eACNC,QAAS,YACTC,UAAW,UACXC,OAAO,EACPC,YAAa,EACbC,cAAe,EACfC,MAAO,EACPC,SAAU,CAAC,CACPL,UAAW,UACXM,eAAgB,EAChBC,eAAgB,EAChBC,aAAc,EACdC,KAAM,OAdd,mBAAQC,EAAR,KAAqBC,EAArB,KAkBMC,EAAU,uCAAG,oCAAAC,EAAA,sEAEQC,MAAM,GAAD,OAtCf,8CAsCe,gBAzCxB,iCAyCwB,cAAiCtC,EAAjC,uBAxCxB,KAwCwB,iBAvCvB,MAuCmG,IAFzF,UAIQ,OAFjBuC,EAFS,QAIHC,OAJG,iCAMQD,EAASE,OANjB,OASX,IAHMC,EANK,OAQLb,EAAW,IAAIc,MAAmB,GAChCC,EAAI,EAAGA,EAAI,IAAKA,EAEdC,EAAmCH,EAAKb,SAASiB,YAAYF,GAEnEf,EAASe,GAAK,CACVpB,UAAWqB,EAAYE,IAAIvB,UAAUwB,KACrCjB,eAAgBc,EAAYE,IAAIE,UAChCnB,eAAgBe,EAAYE,IAAIG,UAChClB,aAAca,EAAYE,IAAII,qBAC9BlB,KAAMY,EAAYE,IAAIvB,UAAUS,MAIxCE,EAAe,CACXd,QAAQ,EACRC,KAAMoB,EAAKU,SAAS9B,KACpBC,QAASmB,EAAKU,SAAS7B,QACvBC,UAAWkB,EAAKW,QAAQ7B,UAAUwB,KAClCvB,MAA+B,IAAxBiB,EAAKW,QAAQC,OACpB5B,YAAagB,EAAKW,QAAQE,OAC1B5B,cAAee,EAAKW,QAAQG,UAC5B5B,MAAOc,EAAKW,QAAQzB,MACpBC,SAAUA,IA/BH,wBAoCX4B,QAAQC,MAAMnB,EAASC,QApCZ,4CAAH,qDAoGhB,OA5DAnE,qBAAU,WAEN+D,MAEJ,CAAEpC,IAEF3B,qBAAU,WAEN,GAAI6D,EAAYb,OAAhB,CAKA,IAGIsC,EAHEC,EAAgBrF,SAASC,eAAe,kBACxCqF,EAAUtF,SAASC,eAAe,WAGrC0D,EAAYT,OAEXkC,EAAa7C,EACb+C,EAAQnF,UAAUM,OAAO,SACzB6E,EAAQnF,UAAUG,IAAI,SAItB8E,EAAa1C,EACb4C,EAAQnF,UAAUM,OAAO,OACzB6E,EAAQnF,UAAUG,IAAI,UAG1B,IAAMiF,EAAU5B,EAAYN,MAAQ,IAC9BmC,EAAM,UAAMJ,EAAW5C,IAAI,GAArB,YAA2B4C,EAAW5C,IAAI,GAA1C,YAAgD4C,EAAW5C,IAAI,IACrEiD,EAAS,UAAML,EAAW3C,OAAO,GAAxB,YAA8B2C,EAAW3C,OAAO,GAAhD,YAAsD2C,EAAW3C,OAAO,IAEvF4C,EAAcK,MAAMN,WAApB,uCAAiEI,EAAjE,aAA4ED,EAA5E,mBAA8FE,EAA9F,aAA4GF,EAA5G,UAGJzF,qBAAU,WAEN,IAAMC,EAAQC,SAASC,eAAe,qBAChC0F,EAAS3F,SAASC,eAAe,eACjC2F,EAAW5F,SAASC,eAAe,oBAEzC0F,EAAO7E,QAAU,WAEbf,EAAMM,OACNuF,EAASxE,YAGbwE,EAASpE,SAAW,SAAC2C,GAEjBpE,EAAMQ,QACNsC,GAAY,SAAAgD,GAER,OAAO1B,EAAK1C,eAIxB,IAEO,sBAAK/B,GAAG,UAAUC,UAAU,cAA5B,UACH,sBAAKD,GAAG,iBAAiBC,UAAU,OAAnC,UACI,mCACI,sBAAMA,UAAU,YAAhB,SACKgE,EAAYZ,OAGjB,sBAAMpD,UAAU,UAAhB,SACKgE,EAAYX,aAIrB,oCACI,sBAAKrD,UAAU,cAAf,UACI,sBAAMA,UAAU,UAAhB,SACKgE,EAAYR,cAEjB,sBAAMxD,UAAU,OAAhB,sBAGJ,uBAAMA,UAAU,sBAAhB,UACI,sBAAMA,UAAU,YAAhB,SACKgE,EAAYV,YAGjB,sBAAKtD,UAAU,gBAAf,UACI,mBAAGA,UAAU,uBACb,iCACKgE,EAAYL,SAAS,GAAGG,aAD7B,gBAOZ,mCACI,qBAAK9D,UAAU,qBAAf,SACKgE,EAAYL,SAASwC,KAAI,SAACC,EAASC,GAEhC,OAAO,sBAAkCrG,UAAU,cAA5C,UACH,sBAAKA,UAAU,OAAf,UACI,qBAAKsG,IAAKF,EAAQrC,KAAMwC,IAAKH,EAAQ9C,YAErC,sBAAMtD,UAAU,MAAhB,SACe,IAAVqG,EAAc,MAAQ,cAG3B,sBAAMrG,UAAU,YAAhB,SACKoG,EAAQ9C,eAIjB,sBAAKtD,UAAU,QAAf,UACI,uBAAMA,UAAU,kBAAhB,UACKoG,EAAQvC,eADb,UAGA,sBAAM7D,UAAU,QAAhB,eAGA,uBAAMA,UAAU,kBAAhB,UACKoG,EAAQxC,eADb,eApBD,sBAAyByC,SA4BxC,qBAAKrG,UAAU,mBAAf,SACI,cAAC,EAAD,CAAQD,GAAG,cAAcE,QAAQ,2BAK7C,cAAC,EAAD,CAAOF,GAAG,oBAAV,SACI,cAAC,EAAD,CAAUA,GAAG,uBAGfiE,EAAYb,OAEL,KAFc,qBAAKnD,UAAU,oBAAf,SACnB,cAAC,EAAD,UCzNGwG,G,MAPsB,WAEjC,OAAO,mCACH,cAAC,EAAD,QCLRC,SAAgB,cAAC,EAAD,IAASpG,SAASC,eAAe,U","file":"static/js/main.c9e7bdff.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./button.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n    content: string;\r\n}\r\n\r\nconst Button: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    return <div id={props.id} className=\"button\">\r\n        <span className=\"content\">\r\n            {props.content}\r\n        </span>\r\n    </div>;\r\n};\r\n\r\nexport default Button;","import React, { useEffect } from \"react\";\r\n\r\nimport \"./modal.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n}\r\n\r\nexport interface ModalElement extends HTMLDivElement\r\n{\r\n    isOpen(): boolean;\r\n    open(): void;\r\n    close(): void;\r\n}\r\n\r\nconst Modal: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const modal = document.getElementById(props.id) as ModalElement;\r\n\r\n        modal.isOpen = () =>\r\n        {\r\n            return modal.classList.contains(\"visible\") && !modal.classList.contains(\"closing\");\r\n        };\r\n\r\n        modal.open = () =>\r\n        {\r\n            modal.classList.add(\"visible\");\r\n        };\r\n\r\n        modal.close = () =>\r\n        {\r\n            modal.classList.add(\"closing\");\r\n            setTimeout(() =>\r\n            {\r\n                modal.classList.remove(\"visible\");\r\n                modal.classList.remove(\"closing\");\r\n            },\r\n            250);\r\n        };\r\n\r\n        const checkEscape = (ev: KeyboardEvent) =>\r\n        {\r\n            if(ev.key === \"Escape\")\r\n            {\r\n                modal.close();\r\n            }\r\n        }\r\n\r\n        document.addEventListener(\"keydown\", checkEscape);\r\n\r\n        const closeButton = document.getElementById(`close-${props.id}`) as HTMLSpanElement;\r\n        \r\n        closeButton.onclick = () =>\r\n        {\r\n            modal.close();\r\n        };\r\n\r\n        return () =>\r\n        {\r\n            document.removeEventListener(\"keydown\", checkEscape);\r\n        };\r\n    },\r\n    []);\r\n\r\n    return <div id={props.id} className=\"modal\">\r\n        <header>\r\n            <i id={`close-${props.id}`} className=\"fi fi-rr-angle-left\"></i>\r\n        </header>\r\n\r\n        <section>\r\n            {props.children}\r\n        </section>\r\n    </div>;\r\n};\r\n\r\nexport default Modal;","import React, { useEffect } from \"react\";\r\n\r\nimport Button from \"../button/\";\r\n\r\nimport \"./city_form.scss\";\r\n\r\nexport interface Props\r\n{\r\n    id: string;\r\n}\r\n\r\nexport interface CityFormElement extends HTMLDivElement\r\n{\r\n    setFocus(): void;\r\n    clear(): void;\r\n\r\n    onSubmit(data: CityFormData): void;\r\n}\r\n\r\nexport interface CityFormData\r\n{\r\n    cityName: string;\r\n}\r\n\r\nconst CityForm: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    useEffect(() =>\r\n    {\r\n        const form = document.getElementById(props.id) as CityFormElement;\r\n        const input = document.getElementById(`input-${props.id}`) as HTMLInputElement;\r\n\r\n        form.setFocus = () =>\r\n        {\r\n            input.focus();\r\n        };\r\n\r\n        form.clear = () =>\r\n        {\r\n            input.value = \"\";\r\n        };\r\n\r\n        form.onSubmit = () =>\r\n        {};\r\n\r\n        const button = document.getElementById(`button-${props.id}`) as HTMLDivElement;\r\n\r\n        button.onclick = () =>\r\n        {\r\n            form.onSubmit({\r\n                cityName: input.value\r\n            });\r\n            form.clear();\r\n        };\r\n\r\n        const checkSubmit = (ev: KeyboardEvent) =>\r\n        {\r\n            if(ev.key === \"Enter\" && document.activeElement === input)\r\n            {\r\n                form.onSubmit({\r\n                    cityName: input.value\r\n                });\r\n                form.clear();\r\n            }\r\n        };\r\n\r\n        document.addEventListener(\"keydown\", checkSubmit);\r\n\r\n        return () =>\r\n        {\r\n            document.removeEventListener(\"keydown\", checkSubmit);\r\n        };\r\n    },\r\n    []);\r\n\r\n    return <div id={props.id} className=\"city-form\">\r\n        <input id={`input-${props.id}`} type=\"text\" placeholder=\"Ciudad\" />\r\n\r\n        <Button id={`button-${props.id}`} content=\"Aceptar\" />\r\n    </div>;\r\n};\r\n\r\nexport default CityForm;","import React from \"react\";\r\n\r\nimport \"./loading.scss\";\r\n\r\nexport interface Props\r\n{}\r\n\r\nconst Loading: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    return <svg className=\"loading\" width=\"30\" height=\"30\">\r\n        <circle cx=\"50%\" cy=\"50%\" r=\"12\" strokeWidth=\"4\" stroke=\"#A1DAF7\" fill=\"none\"></circle>\r\n        <circle className=\"animated-circle\" cx=\"50%\" cy=\"50%\" r=\"12\" strokeWidth=\"4\" stroke=\"#0080C8\" fill=\"none\"></circle>\r\n    </svg>;\r\n};\r\n\r\nexport default Loading;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport ForecastDayResponse from \"../../forecast_day_response\";\r\nimport WeatherResponse from \"../../weather_response\";\r\nimport Button from \"../../components/button/\";\r\nimport Modal, { ModalElement } from \"../../components/modal/\";\r\nimport CityForm, { CityFormElement } from \"../../components/city_form/\";\r\nimport Loading from \"../../components/loading/\";\r\n\r\nimport \"./weather.scss\";\r\n\r\nexport interface Props\r\n{}\r\n\r\nconst KEY = \"9de9e15c101a44b9b6c40544212011\";\r\nconst AQI = \"no\";\r\nconst LANG = \"es\";\r\nconst FORECAST_URL = \"https://api.weatherapi.com/v1/forecast.json\";\r\n\r\nconst RAIN_DAY_BACKGROUND: BackgroundColor =\r\n{\r\n    top: [ 98, 106, 120 ],\r\n    bottom: [ 58, 63, 80 ]\r\n};\r\n\r\nconst RAIN_NIGHT_BACKGROUND: BackgroundColor =\r\n{\r\n    top: [ 50, 54, 66 ],\r\n    bottom: [ 22, 23, 28 ]\r\n};\r\n\r\nconst Weather: React.FunctionComponent<Props> = (props) =>\r\n{\r\n    const [ cityName, setCityName ] = useState<string>(\"parana\");\r\n\r\n    const [ weatherData, setWeatherData ] = useState<WeatherData>({\r\n        loaded: false,\r\n        name: \"Buenos Aires\",\r\n        country: \"Argentina\",\r\n        condition: \"Soleado\",\r\n        isDay: true,\r\n        temperature: 0,\r\n        precipitation: 0,\r\n        cloud: 0,\r\n        forecast: [{\r\n            condition: \"Soleado\",\r\n            minTemperature: 0,\r\n            maxTemperature: 0,\r\n            chanceOfRain: 0,\r\n            icon: \"\",\r\n        }]\r\n    });\r\n\r\n    const getWeather = async () =>\r\n    {\r\n        const response = await fetch(`${FORECAST_URL}?key=${KEY}&q=${cityName}&days=2&aqi=${AQI}&lang=${LANG}`, {});\r\n        \r\n        if(response.status === 200)\r\n        {\r\n            const data = await response.json() as WeatherResponse;\r\n\r\n            const forecast = new Array<ForecastDay>(2);\r\n            for(let i = 0; i < 2; ++i)\r\n            {\r\n                const forecastDay: ForecastDayResponse = data.forecast.forecastday[i];\r\n\r\n                forecast[i] = {\r\n                    condition: forecastDay.day.condition.text,\r\n                    maxTemperature: forecastDay.day.maxtemp_c,\r\n                    minTemperature: forecastDay.day.mintemp_c,\r\n                    chanceOfRain: forecastDay.day.daily_chance_of_rain,\r\n                    icon: forecastDay.day.condition.icon\r\n                };\r\n            }\r\n\r\n            setWeatherData({\r\n                loaded: true,\r\n                name: data.location.name,\r\n                country: data.location.country,\r\n                condition: data.current.condition.text,\r\n                isDay: data.current.is_day === 1 ? true : false,\r\n                temperature: data.current.temp_c,\r\n                precipitation: data.current.precip_mm,\r\n                cloud: data.current.cloud,\r\n                forecast: forecast\r\n            });\r\n        }\r\n        else\r\n        {\r\n            console.error(response.status);\r\n        }\r\n    };\r\n\r\n    useEffect(() =>\r\n    {\r\n        getWeather();\r\n    },\r\n    [ cityName ]);\r\n\r\n    useEffect(() =>\r\n    {\r\n        if(!weatherData.loaded)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const rainContainer = document.getElementById(\"rain-container\") as HTMLDivElement;\r\n        const weather = document.getElementById(\"weather\") as HTMLDivElement;\r\n\r\n        let background: BackgroundColor;\r\n        if(weatherData.isDay)\r\n        {\r\n            background = RAIN_DAY_BACKGROUND;\r\n            weather.classList.remove(\"night\");\r\n            weather.classList.add(\"day\");\r\n        }\r\n        else\r\n        {\r\n            background = RAIN_NIGHT_BACKGROUND;\r\n            weather.classList.remove(\"day\");\r\n            weather.classList.add(\"night\");\r\n        }\r\n\r\n        const opacity = weatherData.cloud / 100;\r\n        const topRGB = `${background.top[0]},${background.top[1]},${background.top[2]}`;\r\n        const bottomRGB = `${background.bottom[0]},${background.bottom[1]},${background.bottom[2]}`;\r\n\r\n        rainContainer.style.background = `linear-gradient(180deg, rgba(${topRGB}, ${opacity}), rgba(${bottomRGB}, ${opacity}))`;\r\n    });\r\n\r\n    useEffect(() =>\r\n    {\r\n        const modal = document.getElementById(\"modal-change-city\") as ModalElement;\r\n        const button = document.getElementById(\"change-city\") as HTMLDivElement;\r\n        const cityForm = document.getElementById(\"form-change-city\") as CityFormElement;\r\n\r\n        button.onclick = () =>\r\n        {\r\n            modal.open();\r\n            cityForm.setFocus();\r\n        };\r\n\r\n        cityForm.onSubmit = (data) =>\r\n        {\r\n            modal.close();\r\n            setCityName(state =>\r\n            {\r\n                return data.cityName;\r\n            });\r\n        };\r\n    },\r\n    []);\r\n\r\n    return <div id=\"weather\" className=\"weather day\">\r\n        <div id=\"rain-container\" className=\"rain\">\r\n            <header>\r\n                <span className=\"city-name\">\r\n                    {weatherData.name}\r\n                </span>\r\n\r\n                <span className=\"country\">\r\n                    {weatherData.country}\r\n                </span>\r\n            </header>\r\n\r\n            <section>\r\n                <div className=\"temperature\">\r\n                    <span className=\"ammount\">\r\n                        {weatherData.temperature}\r\n                    </span>\r\n                    <span className=\"unit\">°C</span>\r\n                </div>\r\n\r\n                <span className=\"condition-container\">\r\n                    <span className=\"condition\">\r\n                        {weatherData.condition}\r\n                    </span>\r\n\r\n                    <div className=\"precipitation\">\r\n                        <i className=\"fi fi-rr-raindrops\"></i>\r\n                        <span>\r\n                            {weatherData.forecast[0].chanceOfRain}%\r\n                        </span>\r\n                    </div>\r\n                </span>\r\n            </section>\r\n\r\n            <footer>\r\n                <div className=\"forecast-container\">\r\n                    {weatherData.forecast.map((element, index) =>\r\n                    {\r\n                        return <div key={`forecastday-${index}`} className=\"forecastday\">\r\n                            <div className=\"left\">\r\n                                <img src={element.icon} alt={element.condition} />\r\n\r\n                                <span className=\"day\">\r\n                                    {index === 0 ? \"Hoy\" : \"Mañana\"}\r\n                                </span>\r\n\r\n                                <span className=\"condition\">\r\n                                    {element.condition}\r\n                                </span>\r\n                            </div>\r\n\r\n                            <div className=\"right\">\r\n                                <span className=\"max-temperature\">\r\n                                    {element.maxTemperature}°\r\n                                </span>\r\n                                <span className=\"slash\">\r\n                                    /\r\n                                </span>\r\n                                <span className=\"min-temperature\">\r\n                                    {element.minTemperature}°\r\n                                </span>\r\n                            </div>\r\n                        </div>;\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"button-container\">\r\n                    <Button id=\"change-city\" content=\"Cambiar ciudad\" />\r\n                </div>\r\n            </footer>\r\n        </div>\r\n\r\n        <Modal id=\"modal-change-city\">\r\n            <CityForm id=\"form-change-city\" />\r\n        </Modal>\r\n\r\n        {!weatherData.loaded ? <div className=\"loading-container\">\r\n            <Loading />\r\n        </div> : null}\r\n    </div>;\r\n};\r\n\r\ninterface WeatherData\r\n{\r\n    loaded: boolean;\r\n    name: string;\r\n    country: string;\r\n    condition: string;\r\n    isDay: boolean;\r\n    temperature: number;\r\n    precipitation: number;\r\n    cloud: number;\r\n    forecast: Array<ForecastDay>;\r\n}\r\n\r\ninterface ForecastDay\r\n{\r\n    condition: string;\r\n    maxTemperature: number;\r\n    minTemperature: number;\r\n    chanceOfRain: number;\r\n    icon: string;\r\n}\r\n\r\ninterface BackgroundColor\r\n{\r\n    top: [ number, number, number ];\r\n    bottom: [ number, number, number ];\r\n}\r\n\r\nexport default Weather;","import React from \"react\";\r\n\r\nimport Weather from \"../pages/weather\";\r\n\r\nimport \"./app.scss\";\r\n\r\nconst App: React.FunctionComponent = () =>\r\n{\r\n    return <>\r\n        <Weather />\r\n    </>;\r\n};\r\n\r\nexport default App;","import * as ReactDom from \"react-dom\";\r\n\r\nimport App from \"./app/\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"app\"));"],"sourceRoot":""}